#include <iostream>
#include <random>
#include <ctime>
#include <string>
#include <time.h> 
#include <unistd.h>
using namespace std;
#define x 10
#define y 10
string steck="";
int leftD,rightD,straightD,backD;
int buff;
int xrobot=5,yrobot=5,robotAngel=1;
int fild [x][y][6]={0};
void generate(){

	for(int xi=0;xi<x;xi++){
		for(int yi=0;yi<y;yi++){
			buff=rand()%2;
			fild[xi][yi][rand()%4+1]=1;
		}
	}
	// 		buff=rand()%2;
	// 		//cout<<buff;
	// 		if(buff){
	// 			fild[xi][yi][1]=1;
	// 			if(yi>0){
	// 				fild[xi][yi-1][1]=1;
	// 			}
	// 		}	
	// 		buff=rand()%2;
	// 		if(buff){
	// 			fild[xi][yi][2]=1;
	// 			if(xi-1<x){
	// 				fild[xi+1][yi][2]=1;
	// 			}
	// 		}
	// 		buff=rand()%2;
	// 		if(buff){
	// 			fild[xi][yi][3]=1;
	// 			if(yi-1<y){
	// 				fild[xi][yi+1][3]=1;
	// 			}
	// 		}	
	// 		buff=rand()%2;
	// 		if(buff){
	// 			fild[xi][yi][4]=1;
	// 			if(xi>0){
	// 				fild[xi-1][yi][4]=1;
	// 			}
	// 		}
	// 	}
	// }
	 for(int xi=0;xi<x;xi++){
	 	for(int yi=0;yi<y;yi++){
			for(int n=1;n<5;n++){
				if(n==1&&yi>0){
					fild[xi][yi-1][3]=fild[xi][yi][1];
				}
				if(n==2&&xi<x-1){
					fild[xi+1][yi][4]=fild[xi][yi][2];
				}
				if(n==3&&yi<y-1){
					fild[xi][yi+1][1]=fild[xi][yi][3];
				}
				if(n==4&&xi>0){
					fild[xi-1][yi][2]=fild[xi][yi][4];
				}
			}
		}		
	}
	for(int ix=0;ix<x;ix++){
		fild[ix][0][1]=1;
	}
	for(int ix=0;ix<x;ix++){
		fild[ix][y-1][3]=1;
	}
	for(int yx=0;yx<y;yx++){
		fild[0][yx][4]=1;
	}
	for(int yx=0;yx<y;yx++){
		fild[x-1][yx][2]=1;
	}
}
void draw(){
	system("clear");	
	for(int yi=0;yi<y;yi++){
		for(int xi=0;xi<x;xi++){
			if(fild[xi][yi][4]==1){
				cout<<1;
			}
			else{
				cout<<fild[xi][yi][1];
			}
			cout<<fild[xi][yi][1];
			if(fild[xi][yi][2]==1){
				cout<<1;
			}
			else{
				cout<<fild[xi][yi][1];
			}
		}
		cout<<endl;
		for(int xi=0;xi<x;xi++){
			cout<<fild[xi][yi][4];
			if(fild[xi][yi][0]==0){
				cout<<"\x1B[0;31;40m"<<fild[xi][yi][0]<<"\x1B[0;0;40m";
			}
			else if(fild[xi][yi][0]==1){
				cout<<"\x1B[0;33;40m"<<fild[xi][yi][0]<<"\x1B[0;0;40m";
			}
			else{
				cout<<"\x1B[1;32;40m"<<fild[xi][yi][0]<<"\x1B[0;0;40m";
			}
			cout<<fild[xi][yi][2];
		}
		cout<<endl;
		for(int xi=0;xi<x;xi++){
			if(fild[xi][yi][4]==1){
				cout<<1;
			}
			else{
				cout<<fild[xi][yi][3];
			}
			cout<<fild[xi][yi][3];
			if(fild[xi][yi][2]==1){
				cout<<1;
			}
			else{
				cout<<fild[xi][yi][3];
			}
		}
		cout<<endl;
	}
	cout<<endl<<endl<<"straightD "<<straightD<<endl<<"rightD "<<rightD<<endl<<"leftD "<<leftD<<endl<<"backD "<<backD<<endl;
}
void distanse(){
	straightD=fild[xrobot][yrobot][robotAngel];
	if(robotAngel==1){
		leftD=fild[xrobot][yrobot][4];
	}
	else{
		leftD=fild[xrobot][yrobot][robotAngel-1];
	}
	if(robotAngel==4){
		rightD=fild[xrobot][yrobot][1];
	}
	else{
		rightD=fild[xrobot][yrobot][robotAngel+1];
	}
	if(robotAngel==1||robotAngel==2){
		backD=fild[xrobot][yrobot][robotAngel+2];
	}
	else{
		backD=fild[xrobot][yrobot][robotAngel-2];	
	}
}
void  go(){
	if(fild[xrobot][yrobot][robotAngel]==0){
		steck+='g';

		fild[xrobot][yrobot][0]=1;

		if(robotAngel==1){
			yrobot-=1;
		}
		if(robotAngel==2){
			xrobot+=1;
		}
		if(robotAngel==3){
			yrobot+=1;
		}
		if(robotAngel==4){
			xrobot-=1;
		}
		fild[xrobot][yrobot][0]=2;
	}
	else{
		steck+='c';
	}
	usleep(250000);
	draw();
}
void left (){
	steck+='l';
	robotAngel--;
	if(robotAngel==0){
		robotAngel=4;
	}
}
void right(){
	steck+='r';
	robotAngel++;
	if(robotAngel==5){
		robotAngel=1;
	}
}
void robot(){
	//distance();
}
void test(){
	fild[yrobot][xrobot][0]=2;
	usleep(1000000);
	draw();
}
int main()
{
	cout<<"\x1B[0;0;40m";
	srand( time(0) );
	generate();
	test();
	draw();
	for(int i=0;i<100;i++){
		distanse();
		buff=rand()%100;
		if(buff<34){
			if(straightD==0){
				go();
			}
			else if(leftD==0){
				left();
				go();
			}	
			else if(rightD==0){
				right();
				go();
			}
			else{
				right();
			}
		}
		else if(buff>66){
			if(leftD==0){
				left();
				go();
			}	
			else if(rightD==0){
				right();
				go();
			}
			else if(straightD==0){
				go();
			}
			else{
				right();
			}
		}
		else{	
			if(rightD==0){
				right();
				go();
			}
			else if(straightD==0){
				go();
			}
			else if(leftD==0){
				left();
				go();
			}
			else{
				right();
			}		
		}
		draw();
	}
	draw();
	cout<<rand()%2<<"\x1B[0;2;40m"<<endl<<steck<<endl;
    return 0;
}
